基础I/O：
	回顾C库的iO接口    linux下的系统调用接口
	文件流指针     文件描述符   文件重定向
	linux下ext2文件系统      inode节点  软连接/硬连接     动态库/静态库的生成
	
	
	
	1.c库中：fopen  fclose   fwrite fread   fseek    fgets   fprintf  sprintf   printf
	
	2，系统调用接口：open  close  write   read   lseek
		库函数与系统调用接口的关系：上下级调用
		pathname  ：文件名称
		flags    ：选项标志
		  O_RDONLY     只读
		  O_WRONLY     只写
		  O_RDWR       读写
		  可选项
		  O_CREAT   若文件不存在则创建，存在则打开
		  O_EXCL    搭配O_CREAT使用，若文件存在则报错返回
		  O_TRUNC    打开文件同时清空文件内容
		  O_APPEND     追加
		 mode：权限（通常使用八进制数据表示）
		 umask（0）只修改当前文件的权限，不对系统造成影响
		 
		 sszie_t write（int fd,const void *buf,size_t count）
		 
		 fd：文件描述符
		 buf  要写入的数据
		 count  要写入的数据长度
		 返回值  实际写入长度  失败：-1
	3.文件描述符 ：非负整数
		一个进程中会打开很多文件，那么进程就需要对这些文件进行管理（描述+组织）
		描述（结构体）   组织（结构体数组）
		进程通过file结构体描述文件，并且使用结构体数组将这些描述组织起来进行管理，我们打开
		文件所获取到的文件描述符其实就是这个数组中对应文件描述信息的下标。我们用户通过下标找到
		文件描述信息，进而对文件进行操作
		
		文件流指针与文件描述符的关系：
			文件流指针这个结构体中封装了文件描述符作为成员变量
		文件的缓冲区：向文件写入数据是先写入缓冲区中，然后等缓冲区满了，才一次性写入文件。
		文件流指针中包含了缓冲区
		文件描述符的分配规则：
			遵循最小未使用原则
			普通文件不具备换行刷新缓冲区的功能
			只有标准输出文件才有这个功能
		
		文件的重定向：改变描述符下标所对应的文件描述信息
		int  dup2（int oldfd，int newfd）
		让newfd也指向oldfd所指向的文件
		2.获取重定向文件名
		3.以相应方式打开文件
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		